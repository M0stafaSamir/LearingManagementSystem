@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<div class="container d-flex justify-content-center align-items-center min-vh-100">
    <div class="card shadow-lg p-4 rounded-4" style="max-width: 500px; width: 100%; border: none;">

        <!-- Header -->
        <div class="text-center">
            <i class="fa-solid fa-user-plus fa-4x text-primary"></i>
            <h2 class="mt-3 fw-bold">Create an Account</h2>
            <p class="text-muted">Join us today!</p>
        </div>

        <!-- Registration Form -->
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post" enctype="multipart/form-data" class="mt-3">

            <div asp-validation-summary="ModelOnly" class="text-danger small"></div>

            <div class="form-floating mb-3">
                <input asp-for="Input.Name" class="form-control rounded-3" aria-required="true" placeholder="Name" />
                <label asp-for="Input.Name">Name</label>
                <span asp-validation-for="Input.Name" class="text-danger small"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control rounded-3" autocomplete="username" aria-required="true" placeholder="Email" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger small"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.Password" type="password" class="form-control rounded-3" autocomplete="new-password" aria-required="true" placeholder="Password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger small"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" type="password" class="form-control rounded-3" autocomplete="new-password" aria-required="true" placeholder="Confirm Password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger small"></span>
            </div>

            <!-- Profile Image Upload -->
            <div class="mb-3">
                <label asp-for="Input.ProfileImg" class="form-label">Profile Image</label>
                <input asp-for="Input.ProfileImg" class="form-control" type="file" accept="image/*" id="profileImageInput" />
                <span asp-validation-for="Input.ProfileImg" class="text-danger small"></span>

                <!-- Image Preview -->
                <div class="mt-2 text-center">
                    <img id="profileImagePreview" src="#" alt="Profile Preview" class="d-none rounded-circle border" style="width: 80px; height: 80px; object-fit: cover;">
                </div>
            </div>

            <button id="registerSubmit" type="submit" class="btn btn-primary w-100 rounded-pill py-2 fw-bold shadow">
                <i class="fa-solid fa-user-check"></i> Register
            </button>
        </form>

        <!-- Login Link -->
        <div class="text-center mt-4">
            <p class="text-muted">Already have an account?</p>
            <a asp-page="./Login" asp-route-returnUrl="@Model.ReturnUrl" class="btn btn-outline-primary rounded-pill w-100 shadow-sm">Log in</a>
        </div>

        <!-- External Login Section -->
        @if ((Model.ExternalLogins?.Count ?? 0) > 0)
        {
            <div class="text-center mt-4">
                <p class="text-muted">Or register with</p>

                <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                    <div class="d-flex justify-content-center gap-3">
                        @foreach (var provider in Model.ExternalLogins!)
                        {
                            var iconClass = provider.Name switch
                            {
                                "Facebook" => "fa-brands fa-facebook",
                                "Google" => "fa-brands fa-google",
                                "Microsoft" => "fa-brands fa-microsoft",
                                _ => "fa-brands fa-user"
                            };
                            var buttonClass = provider.Name switch
                            {
                                "Facebook" => "btn-outline-primary",
                                "Google" => "btn-outline-danger",
                                "Microsoft" => "btn-outline-warning",
                                _ => "btn-outline-secondary"
                            };

                            <button type="submit" name="provider" value="@provider.Name" class="btn @buttonClass rounded-circle p-3 shadow-sm" title="Register with @provider.DisplayName">
                                <i class="@iconClass fa-lg"></i>
                            </button>
                        }
                    </div>
                </form>
            </div>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Profile Image Preview
        document.getElementById("profileImageInput").addEventListener("change", function(event) {
            const file = event.target.files[0];
            const preview = document.getElementById("profileImagePreview");

            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    preview.classList.remove("d-none");
                };
                reader.readAsDataURL(file);
            } else {
                preview.classList.add("d-none");
            }
        });
    </script>
}
